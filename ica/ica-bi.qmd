---
title: "Bivariate Viz"
---
```{r}
library(ggplot2)
```

Use this file for practice with the **bivariate viz** in-class activity.  Refer to the class website for details.
```{r}
# Import data
survey <- read.csv("https://hash-mac.github.io/stat112site-s25/data/survey.csv")

# How many students have now filled out the survey? 49
nrow(survey)

# What type of variables do we have?qualitative?

str(survey)
```
```{r}
# Attach a package needed to use the ggplot function


# Make a ggplot
library(tidyverse)
ggplot(survey, aes(x = hangout)) +
  geom_bar()
# Import data
survey <- read.csv("https://hash-mac.github.io/stat112site-s25/data/survey.csv")

# How many students have now filled out the survey?


# What type of variables do we have?
```
```{r}
ggplot(survey, aes(x = fav_temp_c)) + 
  geom_histogram(color = "white", binwidth = 5)
data.frame(temp_3pm = c(24, 26, 20, 15, 15, 15), temp_9am = c(14, 18, 15, 13, 11, 11))
```
```{r}
ggplot(survey, aes(x = fav_temp_c)) + 
  geom_density()
```

```{r}
# Load data
elections <- read.csv("https://mac-stat.github.io/data/election_2020_county.csv")

# Check it out
head(elections)
```

```{r}
# Set up the plotting frame
# How does this differ than the frame for our histogram of repub_pct_20 alone?
ggplot(elections, aes(x = winner_20)) + 
  geom_bar()
ggplot(elections, aes(x = repub_pct_20)) + 
  geom_histogram(color = "white")
ggplot(elections, aes(x = repub_pct_20)) + 
  geom_density()
```
```{r}
# Add a layer of points for each county
# Take note of the geom!
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point()
```
```{r}
# Change the shape of the points
# What happens if you change the shape to another number?
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point(shape = 3)
```
```{r}
# YOU TRY: Modify the code to make the points "orange"
# NOTE: Try to anticipate if "color" or "fill" will be useful here. Then try both.
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point()
```
```{r}
# Add a layer that represents each county by the state it's in
# Take note of the geom and the info it needs to run!
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_text(aes(label = state_abbr))
```
```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_text(aes(label = state_abbr)) +
  geom_smooth()
 
```
```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_smooth()
```
```{r}
# Scatterplot of repub_pct_20 vs median_rent
ggplot(elections, aes(y = repub_pct_20, x = median_rent)) +
  geom_text(aes(label = state_abbr))


# Scatterplot of repub_pct_20 vs median_age
ggplot(elections, aes(y = repub_pct_20, x = median_age)) +
  geom_text(aes(label = state_abbr))
```
```{r}
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_point()
```
```{r}
# Side-by-side violin plots
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_violin()
```
```{r}
# Side-by-side boxplots (defined below)
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_boxplot()
```
```{r}
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density()
```
```{r}
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density() +
  scale_fill_manual(values = c("blue", "purple", "red"))
```
```{r}
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density(alpha = 0.5) +
  scale_fill_manual(values = c("blue", "purple", "red"))
```
```{r}
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density() +
  scale_fill_manual(values = c("blue", "purple", "red")) +
  facet_wrap(~ historical)
```
```{r}
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_histogram(color = "white") +
  scale_fill_manual(values = c("blue", "purple", "red"))
```
```{r}
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar()
```
```{r}
ggplot(elections, aes(x = winner_20)) +
  geom_bar() +
  facet_wrap(~ historical)
```
```{r}
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar(position = "dodge")
```
```{r}
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar(position = "fill")
```
```{r}
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv")

# How do 3pm temperatures (temp3pm) differ by location?
ggplot(weather, aes(x = temp3pm, fill = location)) + 
  geom_density(alpha = 0.5)
```
```{r}
ggplot(weather, aes(y = temp3pm, x = location)) + 
  geom_boxplot()
```
```{r}
ggplot(weather, aes(y = temp3pm, x = temp9am)) + 
  geom_point()

```
```{r}
ggplot(weather, aes(x = location, fill = raintoday)) + 
  geom_bar()
```
```{r}
library(ggridges)

# Make our first joy plot
# THINK: What DON'T you like about this?
ggplot(elections, aes(x = repub_pct_20, y = state_abbr)) + 
  geom_density_ridges()
```
```{r}
ggplot(elections, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + 
  geom_density_ridges(alpha = 0.5)
```
```{r}
ggplot(elections, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20), fill = historical)) + 
  geom_density_ridges(alpha = 0.5) + 
  labs(y = "state", x = "2020 Republican support (%)") + 
  scale_fill_manual(values = c("blue", "purple", "red"))
```

